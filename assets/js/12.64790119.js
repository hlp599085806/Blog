(window.webpackJsonp=window.webpackJsonp||[]).push([[12],{572:function(v,_,t){"use strict";t.r(_);var e=t(17),a=Object(e.a)({},(function(){var v=this,_=v.$createElement,t=v._self._c||_;return t("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[t("h1",{attrs:{id:"http缓存"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#http缓存"}},[v._v("#")]),v._v(" HTTP缓存")]),v._v(" "),t("h3",{attrs:{id:"浏览器缓存"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#浏览器缓存"}},[v._v("#")]),v._v(" 浏览器缓存")]),v._v(" "),t("p",[v._v("缓存过程分析：")]),v._v(" "),t("p",[v._v("​\t"),t("img",{staticStyle:{zoom:"80%"},attrs:{src:"http://rezpusy5t.hn-bkt.clouddn.com/1c9ef07857274a25a64ccccbf8a697c3~tplv-k3u1fbpfcp-zoom-in-crop-mark:3402:0:0:0.awebp",alt:"image.png"}})]),v._v(" "),t("p",[v._v("由上图我们可以知道：")]),v._v(" "),t("ul",[t("li",[v._v("浏览器每次发起请求，都会先在浏览器缓存中查找该请求的结果以及缓存标识")]),v._v(" "),t("li",[v._v("浏览器每次从服务器端拿到返回的请求结果，都会将该结果和缓存标识存入浏览器缓存中")])]),v._v(" "),t("p",[v._v("浏览器缓存分为"),t("strong",[v._v("本地缓存（强缓存）")]),v._v("，"),t("strong",[v._v("协商缓存（再验证）")]),v._v(" 两个阶段。")]),v._v(" "),t("p",[v._v("其中，常见的HTTP 缓存首部字段：")]),v._v(" "),t("p",[t("strong",[v._v("强缓存")]),v._v("：向浏览器缓存查找该请求结果，并根据该结果的缓存规则来决定是否使用该缓存结果的过程")]),v._v(" "),t("ul",[t("li",[v._v("Expires（HTTP/1.0）")]),v._v(" "),t("li",[v._v("Cache-Control（HTTP/1.1）")])]),v._v(" "),t("p",[t("strong",[v._v("协商缓存")]),v._v("：强缓存失效后，浏览器携带缓存标识向服务器发起请求，由服务器根据缓存标识决定是否使用缓存的过程")]),v._v(" "),t("ul",[t("li",[v._v("Last-Modified 和 If-Modified-Since（HTTP/1.0）")]),v._v(" "),t("li",[v._v("ETag 和 If-None-Match（HTTP/1.1）")])]),v._v(" "),t("h3",{attrs:{id:"强缓存-缓存控制"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#强缓存-缓存控制"}},[v._v("#")]),v._v(" 强缓存（缓存控制）")]),v._v(" "),t("p",[v._v("强缓存表示在缓存期间是否使用缓存（缓存是否有效），需不需要重新发送HTTP请求")]),v._v(" "),t("img",{staticStyle:{zoom:"33%"},attrs:{src:"http://rezpusy5t.hn-bkt.clouddn.com/image-20220714153739887.png",alt:"image-20220714153739887"}}),v._v(" "),t("p",[v._v("控制强缓存的字段分别是 "),t("code",[v._v("Expires")]),v._v(" 和 "),t("code",[v._v("Cache-Control")]),v._v(" ，其中 "),t("code",[v._v("Cache-Control")]),v._v(" 优先级比 "),t("code",[v._v("Expires")]),v._v(" 高")]),v._v(" "),t("p",[v._v("Expires（HTTP/1.0） 值为服务器返回该请求结果缓存的到期时间:")]),v._v(" "),t("blockquote",[t("p",[v._v("Expires: Wed, 22 Oct 2018 08:41:00 GMT")])]),v._v(" "),t("p",[v._v("表示资源会在 Wed, 22 Oct 2018 08:41:00 GMT 后过期，需要再次请求。")]),v._v(" "),t("p",[v._v("并且 Expires 受限于客户端时间，如果修改了客户端时间，可能会造成缓存失效。")]),v._v(" "),t("p",[v._v("所以现在 HTTP/1.1中新增了 "),t("code",[v._v("Cache-Control")])]),v._v(" "),t("p",[v._v("Cache-Control（HTTP/1.1）")]),v._v(" "),t("blockquote",[t("p",[v._v("Cache-control: max-age=30")])]),v._v(" "),t("p",[v._v("该属性值表示资源会在 30 秒后过期，需要再次请求。也就是说在 30 秒内如果再次发起该请求，则会直接使用缓存，强缓存生效。")]),v._v(" "),t("p",[v._v("它与 Expires 相比：")]),v._v(" "),t("ul",[t("li",[v._v("HTTP响应报文中 Expires 的时间值，是一个绝对值")]),v._v(" "),t("li",[v._v("HTTP响应报文中 Cache-Control为max-age=600 ，是相对值（解决 Expires 受限于客户端时间） 除了 max-age ，它还有以下取值：")])]),v._v(" "),t("img",{staticStyle:{zoom:"50%"},attrs:{src:"http://rezpusy5t.hn-bkt.clouddn.com/image-20220714154029153.png",alt:"image-20220714154029153"}}),v._v(" "),t("p",[v._v("注意下面的 "),t("code",[v._v("no-cache")]),v._v(" ，资源依然会被缓存，并且这个缓存要服务器验证后才可以使用")]),v._v(" "),t("img",{staticStyle:{zoom:"33%"},attrs:{src:"http://rezpusy5t.hn-bkt.clouddn.com/image-20220714154132581.png",alt:"image-20220714154132581"}}),v._v(" "),t("p",[v._v("max-age=0 和 no-cache 等价吗？")]),v._v(" "),t("p",[v._v("从规范的字面意思来说，max-age 到期是 应该(SHOULD) 重新验证，而 no-cache 是 必须(MUST) 重新验证。但实际情况以浏览器实现为准，大部分情况他们俩的行为还是一致的。（如果是 max-age=0, must-revalidate 就和 no-cache 等价了）")]),v._v(" "),t("p",[t("strong",[v._v("总结")]),v._v(" 自从 HTTP/1.1 开始，"),t("code",[v._v("Expires")]),v._v(" 逐渐被 "),t("code",[v._v("Cache-Control")]),v._v(" 取代。"),t("code",[v._v("Cache-Control")]),v._v(" 是一个相对时间，即使客户端时间发生改变，相对时间也不会随之改变，这样可以保持服务器和客户端的时间一致性。而且 "),t("code",[v._v("Cache-Control")]),v._v(" 的可配置性比较强大。")]),v._v(" "),t("p",[t("code",[v._v("Cache-Control")]),v._v(" 的优先级高于 "),t("code",[v._v("Expires")]),v._v("，为了兼容 "),t("code",[v._v("HTTP/1.0")]),v._v(" 和 "),t("code",[v._v("HTTP/1.1")]),v._v("，实际项目中两个字段我们都会设置。")]),v._v(" "),t("h3",{attrs:{id:"协商缓存-缓存校验"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#协商缓存-缓存校验"}},[v._v("#")]),v._v(" 协商缓存（缓存校验）")]),v._v(" "),t("p",[v._v("如果缓存过期了:")]),v._v(" "),t("ul",[t("li",[t("p",[v._v("没有 Cache-Control 和 Expires")])]),v._v(" "),t("li",[t("p",[v._v("Cache-Control 和 Expires 过期")])]),v._v(" "),t("li",[t("p",[v._v("设置了 no-cache 需要发起请求验证服务器资源是否有更新：")]),v._v(" "),t("ol",[t("li",[v._v("有更新，返回200，更新缓存")]),v._v(" "),t("li",[v._v("无更新，返回304，更新浏览器缓存有效期")])])])]),v._v(" "),t("img",{staticStyle:{zoom:"33%"},attrs:{src:"http://rezpusy5t.hn-bkt.clouddn.com/image-20220714154339844.png",alt:"image-20220714154339844"}}),v._v(" "),t("p",[t("strong",[v._v("Last-Modified 和 If-Modified-Since（HTTP/1.0）")])]),v._v(" "),t("ul",[t("li",[v._v("Last-Modified（响应头）")]),v._v(" "),t("li",[v._v("If-Modified-Since（请求头）")])]),v._v(" "),t("img",{staticStyle:{zoom:"33%"},attrs:{src:"http://rezpusy5t.hn-bkt.clouddn.com/image-20220714154420062.png",alt:"image-20220714154420062"}}),v._v(" "),t("p",[t("code",[v._v("Last-Modified")]),v._v(" 表示本地文件最后修改日期，"),t("code",[v._v("If-Modified-Since")]),v._v(" 会将 "),t("code",[v._v("Last-Modified")]),v._v(" 的值发送给服务器，询问服务器在该日期后资源是否有更新，有更新的话就会将新的资源发送回来，否则返回 304 状态码。")]),v._v(" "),t("p",[v._v("但是这种方式存在着一些缺点，例如：")]),v._v(" "),t("ul",[t("li",[v._v("负载均衡的服务器，各个服务器生成的 Last-Modified 可能有所不同")]),v._v(" "),t("li",[v._v("GMT 格式有最小单位，例如，如果在一秒内有更改将不能被识别")])]),v._v(" "),t("p",[t("strong",[v._v("ETag 和 If-None-Match（HTTP/1.1）")])]),v._v(" "),t("p",[v._v("为了解决上面的那个问题， HTTP/1.1 加了这组标记")]),v._v(" "),t("ul",[t("li",[v._v("ETag（响应头）")]),v._v(" "),t("li",[v._v("If-None-Match（请求头） "),t("code",[v._v("ETag")]),v._v(" 类似于文件指纹，是文件的一个唯一标识序列，当资源有变化时，"),t("code",[v._v("Etag")]),v._v("就会重新生成，"),t("code",[v._v("If-None-Match")]),v._v(" 会将当前 "),t("code",[v._v("ETag")]),v._v(" 发送给服务器，询问该资源 "),t("code",[v._v("ETag")]),v._v(" 是否变动，有变动的话就将新的资源发送回来。并且 "),t("code",[v._v("ETag")]),v._v(" 优先级比 "),t("code",[v._v("Last-Modified")]),v._v(" 高")])]),v._v(" "),t("p",[v._v("使用 ETag 就可以精确地识别资源的变动情况，就算是秒内的更新，也会让浏览器感知，能够更有效地利用缓存")]),v._v(" "),t("p",[t("strong",[v._v("ETag 强弱之分")])]),v._v(" "),t("p",[v._v("ETag 机制同时支持强校验和弱校验。它们通过ETag标识符的开头是否存在“W/”来区分，如：")]),v._v(" "),t("blockquote",[t("p",[v._v('"123456789"   -- 一个强ETag验证符\nW/"123456789"  -- 一个弱ETag验证符 强 ETag 要求资源在字节级别必须完全相符，弱 ETag 在值前有个“W/”标记，只要求资源在语义上没有变化，但内部可能会有部分发生了改变（例如 HTML 里的标签顺序调整，或者多了几个空格）')])])])}),[],!1,null,null,null);_.default=a.exports}}]);